import { DrawerActions, useNavigation } from "@react-navigation/native";
import React from "react";
import { SvgXml } from "react-native-svg";
import { useTheme } from "../../app/utils/themeContext";

export function SvgHome({ focused }) {
  const { colors, isDark } = useTheme();

  let activeLight;
  let inactiveLight;
  let activeDark;
  let inactiveDark;

  if (!isDark) {
    activeLight = "#072437";
    inactiveLight = "#4D4D4D";
  } else {
    activeDark = "#ffff";
    inactiveDark = "#5B829C";
  }

  const Home = `<svg width="17" height="18" viewBox="0 0 17 18" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M6.2557 16.0171V13.5637C6.25568 12.9397 6.75772 12.4327 7.37975 12.4285H9.65823C10.2832 12.4285 10.7899 12.9367 10.7899 13.5637V13.5637V16.0247C10.7897 16.5546 11.2113 16.9876 11.7392 17H13.2582C14.7725 17 16 15.7685 16 14.2495V14.2495V7.27027C15.9919 6.67266 15.7122 6.11148 15.2405 5.74643L10.0456 1.54824C9.13548 0.817253 7.84174 0.817253 6.93165 1.54824L1.75949 5.75405C1.28599 6.11762 1.00583 6.67973 1 7.27789V14.2495C1 15.7685 2.22753 17 3.74177 17H5.26076C5.80186 17 6.24051 16.56 6.24051 16.0171V16.0171" stroke="${
          isDark && focused
            ? "#ffff"
            : !isDark && !focused
            ? "#4d4d4d"
            : isDark && !focused
            ? "#5b829c"
            : "#072437"
        }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        `;
  const SvgImage = () => (
    <SvgXml
      xml={Home}
      // onPress={()=> navigation.dispatch(DrawerActions.openDrawer())}
    />
  );
  return <SvgImage />;
}

export function SvgRoster({ focused }) {
  const { isDark } = useTheme();

  const Roster = `<svg width="21" height="17" viewBox="0 0 21 17" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M16.3359 7.47763C17.6449 7.29492 18.6527 6.18001 18.6555 4.82926C18.6555 3.49808 17.6787 2.39436 16.3979 2.18555" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M18.0635 10.604C19.3312 10.7923 20.216 11.2332 20.216 12.1421C20.216 12.7676 19.7994 13.1741 19.1257 13.4295" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M10.7049 10.9893C7.68903 10.9893 5.11328 11.4432 5.11328 13.2564C5.11328 15.0686 7.67308 15.5356 10.7049 15.5356C13.7207 15.5356 16.2955 15.0863 16.2955 13.2722C16.2955 11.4582 13.7366 10.9893 10.7049 10.9893Z" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M10.7051 8.40138C12.6841 8.40138 14.2887 6.80825 14.2887 4.84131C14.2887 2.87531 12.6841 1.28125 10.7051 1.28125C8.72617 1.28125 7.12161 2.87531 7.12161 4.84131C7.1141 6.80079 8.70647 8.39485 10.6789 8.40138H10.7051Z" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M5.07348 7.47763C3.76356 7.29492 2.75672 6.18001 2.75391 4.82926C2.75391 3.49808 3.73072 2.39436 5.01155 2.18555" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M3.34591 10.604C2.07821 10.7923 1.19336 11.2332 1.19336 12.1421C1.19336 12.7676 1.60998 13.1741 2.28371 13.4295" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
    
        `;
  const SvgImage = () => (
    <SvgXml
      xml={Roster}
      // onPress={()=> navigation.dispatch(DrawerActions.toggleDrawer())}
    />
  );
  return <SvgImage />;
}
export function SvgSchedule({ focused }) {
  const { isDark } = useTheme();

  const Schedule = `<svg width="17" height="18" viewBox="0 0 17 18" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M1.26758 7.17265H15.5267" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M11.9469 10.2767H11.9543" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M8.39713 10.2767H8.40454" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M4.83951 10.2767H4.84692" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M11.9469 13.3655H11.9543" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M8.39713 13.3655H8.40454" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M4.83951 13.3655H4.84692" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M11.6284 1.28809V3.90348" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M5.16548 1.28809V3.90348" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M11.784 2.54346H5.01013C2.66078 2.54346 1.19336 3.84364 1.19336 6.23356V13.4259C1.19336 15.8534 2.66078 17.1836 5.01013 17.1836H11.7766C14.1333 17.1836 15.5933 15.8759 15.5933 13.486V6.23356C15.6007 3.84364 14.1407 2.54346 11.784 2.54346Z" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
    
    
        `;
  const SvgImage = () => <SvgXml xml={Schedule} />;
  return <SvgImage />;
}

export function ViewSubmit() {
  const Submit = `<svg width="113" height="21" viewBox="0 0 113 21" fill="none" xmlns="http://www.w3.org/2000/svg">
  <rect width="113" height="21" rx="4" fill="#0B3A5B" fill-opacity="0.1"/>
  <path d="M15.5002 11.85C16.2182 11.85 16.8002 11.268 16.8002 10.55C16.8002 9.83203 16.2182 9.25 15.5002 9.25C14.7822 9.25 14.2002 9.83203 14.2002 10.55C14.2002 11.268 14.7822 11.85 15.5002 11.85Z" stroke="#07243F" stroke-linecap="round" stroke-linejoin="round"/>
  <path d="M22 10.55C20.2664 13.5836 18.1 15.1 15.5 15.1C12.9 15.1 10.7335 13.5836 9 10.55C10.7335 7.51645 12.9 6 15.5 6C18.1 6 20.2664 7.51645 22 10.55Z" stroke="#07243F" stroke-linecap="round" stroke-linejoin="round"/>
  <path d="M31.2275 12.4521L33.0342 6.89062H34.3916L31.833 14H30.6367L28.0879 6.89062H29.4404L31.2275 12.4521ZM36.3447 14H35.1582V8.7168H36.3447V14ZM35.085 7.34473C35.085 7.16243 35.1419 7.01107 35.2559 6.89062C35.373 6.77018 35.5391 6.70996 35.7539 6.70996C35.9688 6.70996 36.1348 6.77018 36.252 6.89062C36.3691 7.01107 36.4277 7.16243 36.4277 7.34473C36.4277 7.52376 36.3691 7.6735 36.252 7.79395C36.1348 7.91113 35.9688 7.96973 35.7539 7.96973C35.5391 7.96973 35.373 7.91113 35.2559 7.79395C35.1419 7.6735 35.085 7.52376 35.085 7.34473ZM39.9678 14.0977C39.2158 14.0977 38.6055 13.8617 38.1367 13.3896C37.6712 12.9144 37.4385 12.2829 37.4385 11.4951V11.3486C37.4385 10.8213 37.5394 10.3509 37.7412 9.9375C37.9463 9.52083 38.2327 9.19694 38.6006 8.96582C38.9684 8.7347 39.3786 8.61914 39.8311 8.61914C40.5505 8.61914 41.1055 8.84863 41.4961 9.30762C41.89 9.7666 42.0869 10.416 42.0869 11.2559V11.7344H38.6348C38.6706 12.1706 38.8154 12.5156 39.0693 12.7695C39.3265 13.0234 39.6488 13.1504 40.0361 13.1504C40.5798 13.1504 41.0225 12.9307 41.3643 12.4912L42.0039 13.1016C41.7923 13.4173 41.5091 13.6631 41.1543 13.8389C40.8027 14.0114 40.4072 14.0977 39.9678 14.0977ZM39.8262 9.57129C39.5007 9.57129 39.237 9.68522 39.0352 9.91309C38.8366 10.141 38.7096 10.4583 38.6543 10.8652H40.915V10.7773C40.889 10.3802 40.7832 10.0807 40.5977 9.87891C40.4121 9.67383 40.1549 9.57129 39.8262 9.57129ZM47.6533 12.3643L48.4932 8.7168H49.6504L48.21 14H47.2334L46.1006 10.3721L44.9873 14H44.0107L42.5654 8.7168H43.7227L44.5771 12.3252L45.6611 8.7168H46.5547L47.6533 12.3643ZM56.7646 12.1689C56.7646 11.8564 56.654 11.6156 56.4326 11.4463C56.2145 11.277 55.819 11.1061 55.2461 10.9336C54.6732 10.7611 54.2174 10.569 53.8789 10.3574C53.2311 9.95052 52.9072 9.41992 52.9072 8.76562C52.9072 8.19271 53.14 7.7207 53.6055 7.34961C54.0742 6.97852 54.6813 6.79297 55.4268 6.79297C55.9215 6.79297 56.3626 6.88411 56.75 7.06641C57.1374 7.2487 57.4417 7.50911 57.6631 7.84766C57.8844 8.18294 57.9951 8.55566 57.9951 8.96582H56.7646C56.7646 8.59473 56.6475 8.30501 56.4131 8.09668C56.182 7.88509 55.8499 7.7793 55.417 7.7793C55.0133 7.7793 54.6992 7.86556 54.4746 8.03809C54.2533 8.21061 54.1426 8.4515 54.1426 8.76074C54.1426 9.02116 54.263 9.23926 54.5039 9.41504C54.7448 9.58757 55.1419 9.75684 55.6953 9.92285C56.2487 10.0856 56.693 10.2728 57.0283 10.4844C57.3636 10.6927 57.6094 10.9336 57.7656 11.207C57.9219 11.4772 58 11.7946 58 12.1592C58 12.7516 57.7721 13.2236 57.3164 13.5752C56.8639 13.9235 56.2487 14.0977 55.4707 14.0977C54.9564 14.0977 54.4827 14.0033 54.0498 13.8145C53.6201 13.6224 53.2848 13.3587 53.0439 13.0234C52.8063 12.6882 52.6875 12.2975 52.6875 11.8516H53.9229C53.9229 12.2552 54.0563 12.5677 54.3232 12.7891C54.5902 13.0104 54.9727 13.1211 55.4707 13.1211C55.9004 13.1211 56.2227 13.0348 56.4375 12.8623C56.6556 12.6865 56.7646 12.4554 56.7646 12.1689ZM62.1699 13.4824C61.8216 13.8926 61.3268 14.0977 60.6855 14.0977C60.1126 14.0977 59.6781 13.93 59.3818 13.5947C59.0889 13.2594 58.9424 12.7744 58.9424 12.1396V8.7168H60.1289V12.125C60.1289 12.7956 60.4072 13.1309 60.9639 13.1309C61.54 13.1309 61.929 12.9242 62.1309 12.5107V8.7168H63.3174V14H62.1992L62.1699 13.4824ZM69.1621 11.4121C69.1621 12.2324 68.9782 12.8851 68.6104 13.3701C68.2458 13.8551 67.7428 14.0977 67.1016 14.0977C66.4831 14.0977 66.0013 13.8747 65.6562 13.4287L65.5977 14H64.5234V6.5H65.71V9.22461C66.0518 8.82096 66.5124 8.61914 67.0918 8.61914C67.7363 8.61914 68.2425 8.8584 68.6104 9.33691C68.9782 9.81543 69.1621 10.4844 69.1621 11.3438V11.4121ZM67.9756 11.3096C67.9756 10.7367 67.8747 10.307 67.6729 10.0205C67.471 9.73405 67.1781 9.59082 66.7939 9.59082C66.2796 9.59082 65.9183 9.81543 65.71 10.2646V12.4424C65.9215 12.9014 66.2861 13.1309 66.8037 13.1309C67.1748 13.1309 67.4613 12.9925 67.6631 12.7158C67.8649 12.4391 67.9691 12.0208 67.9756 11.4609V11.3096ZM71.2764 8.7168L71.3105 9.26855C71.6816 8.83561 72.1895 8.61914 72.834 8.61914C73.5404 8.61914 74.0238 8.88932 74.2842 9.42969C74.6683 8.88932 75.2087 8.61914 75.9053 8.61914C76.488 8.61914 76.9209 8.78027 77.2041 9.10254C77.4906 9.4248 77.637 9.90007 77.6436 10.5283V14H76.457V10.5625C76.457 10.2272 76.3838 9.98145 76.2373 9.8252C76.0908 9.66895 75.8483 9.59082 75.5098 9.59082C75.2396 9.59082 75.0182 9.66406 74.8457 9.81055C74.6764 9.95378 74.5576 10.1426 74.4893 10.377L74.4941 14H73.3076V10.5234C73.2913 9.90169 72.974 9.59082 72.3555 9.59082C71.8802 9.59082 71.5433 9.78451 71.3447 10.1719V14H70.1582V8.7168H71.2764ZM80.124 14H78.9375V8.7168H80.124V14ZM78.8643 7.34473C78.8643 7.16243 78.9212 7.01107 79.0352 6.89062C79.1523 6.77018 79.3184 6.70996 79.5332 6.70996C79.748 6.70996 79.9141 6.77018 80.0312 6.89062C80.1484 7.01107 80.207 7.16243 80.207 7.34473C80.207 7.52376 80.1484 7.6735 80.0312 7.79395C79.9141 7.91113 79.748 7.96973 79.5332 7.96973C79.3184 7.96973 79.1523 7.91113 79.0352 7.79395C78.9212 7.6735 78.8643 7.52376 78.8643 7.34473ZM84.3818 12.5645C84.3818 12.3529 84.2939 12.1917 84.1182 12.0811C83.9456 11.9704 83.6576 11.8727 83.2539 11.7881C82.8503 11.7035 82.5133 11.596 82.2432 11.4658C81.6507 11.1794 81.3545 10.7643 81.3545 10.2207C81.3545 9.76497 81.5465 9.38411 81.9307 9.07812C82.3148 8.77214 82.8031 8.61914 83.3955 8.61914C84.027 8.61914 84.5365 8.77539 84.9238 9.08789C85.3145 9.40039 85.5098 9.80566 85.5098 10.3037H84.3232C84.3232 10.0758 84.2386 9.88704 84.0693 9.7373C83.9001 9.58431 83.6755 9.50781 83.3955 9.50781C83.1351 9.50781 82.9219 9.56803 82.7559 9.68848C82.5931 9.80892 82.5117 9.97005 82.5117 10.1719C82.5117 10.3542 82.5882 10.4958 82.7412 10.5967C82.8942 10.6976 83.2035 10.8001 83.6689 10.9043C84.1344 11.0052 84.499 11.1273 84.7627 11.2705C85.0296 11.4105 85.2266 11.5798 85.3535 11.7783C85.4837 11.9769 85.5488 12.2178 85.5488 12.501C85.5488 12.9762 85.3519 13.362 84.958 13.6582C84.5641 13.9512 84.0482 14.0977 83.4102 14.0977C82.9772 14.0977 82.5915 14.0195 82.2529 13.8633C81.9144 13.707 81.6507 13.4922 81.4619 13.2188C81.2731 12.9453 81.1787 12.6507 81.1787 12.335H82.3311C82.3473 12.6149 82.4531 12.8314 82.6484 12.9844C82.8438 13.1341 83.1025 13.209 83.4248 13.209C83.7373 13.209 83.9749 13.1504 84.1377 13.0332C84.3005 12.9128 84.3818 12.7565 84.3818 12.5645ZM89.5479 12.5645C89.5479 12.3529 89.46 12.1917 89.2842 12.0811C89.1117 11.9704 88.8236 11.8727 88.4199 11.7881C88.0163 11.7035 87.6794 11.596 87.4092 11.4658C86.8167 11.1794 86.5205 10.7643 86.5205 10.2207C86.5205 9.76497 86.7126 9.38411 87.0967 9.07812C87.4808 8.77214 87.9691 8.61914 88.5615 8.61914C89.193 8.61914 89.7025 8.77539 90.0898 9.08789C90.4805 9.40039 90.6758 9.80566 90.6758 10.3037H89.4893C89.4893 10.0758 89.4046 9.88704 89.2354 9.7373C89.0661 9.58431 88.8415 9.50781 88.5615 9.50781C88.3011 9.50781 88.0879 9.56803 87.9219 9.68848C87.7591 9.80892 87.6777 9.97005 87.6777 10.1719C87.6777 10.3542 87.7542 10.4958 87.9072 10.5967C88.0602 10.6976 88.3695 10.8001 88.835 10.9043C89.3005 11.0052 89.665 11.1273 89.9287 11.2705C90.1956 11.4105 90.3926 11.5798 90.5195 11.7783C90.6497 11.9769 90.7148 12.2178 90.7148 12.501C90.7148 12.9762 90.5179 13.362 90.124 13.6582C89.7301 13.9512 89.2142 14.0977 88.5762 14.0977C88.1432 14.0977 87.7575 14.0195 87.4189 13.8633C87.0804 13.707 86.8167 13.4922 86.6279 13.2188C86.4391 12.9453 86.3447 12.6507 86.3447 12.335H87.4971C87.5133 12.6149 87.6191 12.8314 87.8145 12.9844C88.0098 13.1341 88.2686 13.209 88.5908 13.209C88.9033 13.209 89.141 13.1504 89.3037 13.0332C89.4665 12.9128 89.5479 12.7565 89.5479 12.5645ZM93.0146 14H91.8281V8.7168H93.0146V14ZM91.7549 7.34473C91.7549 7.16243 91.8118 7.01107 91.9258 6.89062C92.043 6.77018 92.209 6.70996 92.4238 6.70996C92.6387 6.70996 92.8047 6.77018 92.9219 6.89062C93.0391 7.01107 93.0977 7.16243 93.0977 7.34473C93.0977 7.52376 93.0391 7.6735 92.9219 7.79395C92.8047 7.91113 92.6387 7.96973 92.4238 7.96973C92.209 7.96973 92.043 7.91113 91.9258 7.79395C91.8118 7.6735 91.7549 7.52376 91.7549 7.34473ZM94.0889 11.3096C94.0889 10.792 94.1914 10.3265 94.3965 9.91309C94.6016 9.49642 94.8896 9.17741 95.2607 8.95605C95.6318 8.73145 96.0583 8.61914 96.54 8.61914C97.2529 8.61914 97.8307 8.84863 98.2734 9.30762C98.7194 9.7666 98.9603 10.3753 98.9961 11.1338L99.001 11.4121C99.001 11.9329 98.9001 12.3984 98.6982 12.8086C98.4997 13.2188 98.2132 13.5361 97.8389 13.7607C97.4678 13.9854 97.0381 14.0977 96.5498 14.0977C95.8044 14.0977 95.207 13.8503 94.7578 13.3555C94.3118 12.8574 94.0889 12.195 94.0889 11.3682V11.3096ZM95.2754 11.4121C95.2754 11.9557 95.3877 12.3822 95.6123 12.6914C95.8369 12.9974 96.1494 13.1504 96.5498 13.1504C96.9502 13.1504 97.2611 12.9941 97.4824 12.6816C97.707 12.3691 97.8193 11.9118 97.8193 11.3096C97.8193 10.7757 97.7038 10.3525 97.4727 10.04C97.2448 9.72754 96.9339 9.57129 96.54 9.57129C96.1527 9.57129 95.8451 9.72591 95.6172 10.0352C95.3893 10.3411 95.2754 10.8001 95.2754 11.4121ZM101.105 8.7168L101.14 9.32715C101.53 8.85514 102.043 8.61914 102.678 8.61914C103.778 8.61914 104.338 9.24902 104.357 10.5088V14H103.171V10.5771C103.171 10.2419 103.098 9.99447 102.951 9.83496C102.808 9.6722 102.572 9.59082 102.243 9.59082C101.765 9.59082 101.408 9.80729 101.174 10.2402V14H99.9873V8.7168H101.105Z" fill="#07243F"/>
  </svg>`;
  const SvgImage = () => <SvgXml xml={Submit} />;
  return <SvgImage />;
}

export function RightAngle() {
  const Submit = `<svg class="svg-icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M632.746667 481.706667l-180.906667-180.906667a42.666667 42.666667 0 0 0-60.586667 0 42.666667 42.666667 0 0 0 0 60.16L542.293333 512l-151.04 151.04a42.666667 42.666667 0 0 0 0 60.16 42.666667 42.666667 0 0 0 30.293334 12.373333 42.666667 42.666667 0 0 0 30.293333-12.373333l180.906667-180.906667a42.666667 42.666667 0 0 0 0-60.586666z"  /></svg>`;
  const SvgImage = () => <SvgXml xml={Submit} />;
  return <SvgImage />;
}

export function DetailsSvg() {
  const Submit = `<svg width="77" height="18" viewBox="0 0 77 18" fill="none" xmlns="http://www.w3.org/2000/svg">
  <rect width="77" height="18" rx="4" fill="#0B3A5B" fill-opacity="0.1"/>
  </svg>`;
  const SvgImage = () => <SvgXml xml={Submit} />;
  return <SvgImage />;
}

export function CrossSign() {
  const Submit = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z"/></svg>`;
  const SvgImage = () => <SvgXml xml={Submit} />;
  return <SvgImage />;
}

export function PlusSign() {
  const Submit = `<svg style="color: rgb(0, 0, 0);"
   xmlns="http://www.w3.org/2000/svg"
    width="22" height="22" fill="currentColor" class="bi bi-plus"
   viewBox="0 0 16 16"> <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 
   1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" 
   fill="#000000"></path> </svg>
  `;
  const SvgImage = () => <SvgXml xml={Submit} />;
  return <SvgImage />;
}

export function SvgChat({ focused }) {
  const { isDark } = useTheme();
  const Chat = `<svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M14.8504 14.8546C12.4055 17.2838 8.78518 17.8086 5.82249 16.4474C5.38512 16.2725 5.02655 16.1311 4.68566 16.1311C3.73615 16.1367 2.55429 17.0513 1.94005 16.4418C1.3258 15.8315 2.24717 14.6565 2.24717 13.7075C2.24717 13.3688 2.11049 13.0189 1.93442 12.5836C0.563624 9.64074 1.09265 6.0429 3.53757 3.61452C6.65864 0.512741 11.7294 0.512741 14.8504 3.61372C17.9771 6.72029 17.9715 11.7536 14.8504 14.8546Z" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M12.3446 9.56437H12.3518" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M9.13761 9.56437H9.14481" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M5.93058 9.56437H5.93778" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
        `;
  const SvgImage = () => <SvgXml xml={Chat} />;
  return <SvgImage />;
}

export function SvgEdit() {
  const Edit = `<svg width="17" height="19" viewBox="0 0 17 19" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path fill-rule="evenodd" clip-rule="evenodd" d="M10.2766 2.32279C10.9881 1.47247 12.2671 1.34779 13.135 2.0448C13.183 2.08262 14.7249 3.28042 14.7249 3.28042C15.6784 3.85684 15.9747 5.08223 15.3852 6.01738C15.3539 6.06746 6.6368 16.9713 6.6368 16.9713C6.34679 17.3331 5.90655 17.5467 5.43606 17.5518L2.09775 17.5938L1.34559 14.4102C1.24023 13.9625 1.34559 13.4924 1.63561 13.1306L10.2766 2.32279Z" stroke="#07243F" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
  <path d="M8.66309 4.34619L13.6643 8.18693" stroke="#07243F" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
  </svg> `;
  const SvgImage = () => <SvgXml xml={Edit} />;
  return <SvgImage />;
}

export function SvgHealth({ focused }) {
  const { isDark } = useTheme();
  const Health = `<svg width="19" height="18" viewBox="0 0 19 18" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M9.30285 13.4247V11.2139" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M14.7371 3.53711C16.2195 3.53711 17.4125 4.73098 17.4125 6.20372V9.20147C15.2546 10.4563 12.4038 11.2145 9.29853 11.2145C6.1933 11.2145 3.35123 10.4563 1.19336 9.20147V6.195C1.19336 4.72227 2.3951 3.53711 3.87754 3.53711H14.7371Z" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M12.3732 3.53292V3.21397C12.3732 2.15081 11.5048 1.28809 10.4346 1.28809H8.17149C7.10132 1.28809 6.23291 2.15081 6.23291 3.21397V3.53292" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M1.21484 12.3843L1.38063 14.5707C1.49291 16.0443 2.72886 17.1833 4.21569 17.1833H14.3901C15.877 17.1833 17.1129 16.0443 17.2252 14.5707L17.391 12.3843" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M9.08789 5.64502V9.13078" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M10.8422 7.38867H7.3335" stroke="${
      isDark && focused
        ? "#ffff"
        : !isDark && !focused
        ? "#4d4d4d"
        : isDark && !focused
        ? "#5b829c"
        : "#072437"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
    
    
        `;
  const SvgImage = () => <SvgXml xml={Health} />;
  return <SvgImage />;
}

export function SvgDrawer() {
  const { isDark } = useTheme();

  const Drawer = `<svg width="20" height="17" viewBox="0 0 24 17" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path d="M24 15.2367C24 15.9682 23.407 16.5613 22.6754 16.5613H1.3246C0.593045 16.5613 0 15.9682 0 15.2367V15.2367C0 14.5051 0.593045 13.9121 1.3246 13.9121H22.6754C23.407 13.9121 24 14.5051 24 15.2367V15.2367ZM24 8.61364C24 9.3452 23.407 9.93825 22.6754 9.93825H1.3246C0.593045 9.93825 0 9.3452 0 8.61364V8.61364C0 7.88208 0.593046 7.28904 1.3246 7.28904H22.6754C23.407 7.28904 24 7.88208 24 8.61364V8.61364ZM24 1.99062C24 2.72218 23.407 3.31522 22.6754 3.31522H1.3246C0.593045 3.31522 0 2.72218 0 1.99062V1.99062C0 1.25906 0.593045 0.666016 1.3246 0.666016H22.6754C23.407 0.666016 24 1.25906 24 1.99062V1.99062Z" fill="${
    isDark ? "#ffff" : "#07243F"
  }" height="200"/>
  </svg>
      `;
  const SvgImage = () => <SvgXml xml={Drawer} />;
  return <SvgImage />;
}

export function SvgUpload() {
  const upload = `<svg width="14" height="16" viewBox="0 0 14 16" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M9.09119 1.0093H3.95865C2.35377 1.00313 1.03823 2.28163 1.00043 3.88651V12.2574C0.973421 13.8391 2.23341 15.1438 3.81591 15.1716C3.86298 15.1716 3.91082 15.1716 3.95865 15.1701H10.122C11.7184 15.1539 13.0023 13.8537 13 12.2574V5.08168L9.09119 1.0093Z" stroke="#585858" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M8.88879 1V3.24452C8.88879 4.34016 9.77534 5.22824 10.871 5.23133H12.9959" stroke="#585858" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M8.74945 8.84233H4.96872" stroke="#585858" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M6.8597 10.7324V6.95166" stroke="#585858" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
    `;
  const Svg = () => <SvgXml xml={upload} />;
  return <Svg />;
}
interface Props {
  toggle?: () => void;
}
export function SvgCheckBox(props: Props) {
  const { isDark } = useTheme();
  const checkbox = `<svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M12.7483 1H5.25081C2.63805 1 1 2.84995 1 5.46789V12.5321C1 15.1501 2.63027 17 5.25081 17H12.7475C15.3689 17 17 15.1501 17 12.5321V5.46789C17 2.84995 15.3689 1 12.7483 1Z" stroke="${
      isDark ? "#ffff" : "#07243F"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M5.92065 9.00008L7.97384 11.0524L12.0785 6.94775" stroke="${
      isDark ? "#ffff" : "#07243F"
    }" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
    `;
  const Svg = () => <SvgXml xml={checkbox} onPress={props.toggle} />;
  return <Svg />;
}

export function SvgUnCheck(props: Props) {
  const uncheck = `<svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M12.7483 1H5.25081C2.63805 1 1 2.84995 1 5.46789V12.5321C1 15.1501 2.63027 17 5.25081 17H12.7475C15.3689 17 17 15.1501 17 12.5321V5.46789C17 2.84995 15.3689 1 12.7483 1Z" stroke="#262626" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
    `;
  const Svg = () => <SvgXml xml={uncheck} onPress={props.toggle} />;
  return <Svg />;
}
export function SvgSearch(props: Props) {
  const uncheck = `<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
  <mask id="mask0_33_1243" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="16" height="16">
  <path fill-rule="evenodd" clip-rule="evenodd" d="M0 0H15.0388V15.0389H0V0Z" fill="white"/>
  </mask>
  <g mask="url(#mask0_33_1243)">
  <path fill-rule="evenodd" clip-rule="evenodd" d="M7.51983 1.15823C4.01201 1.15823 1.15819 4.01128 1.15819 7.5191C1.15819 11.0269 4.01201 13.8807 7.51983 13.8807C11.0269 13.8807 13.8807 11.0269 13.8807 7.5191C13.8807 4.01128 11.0269 1.15823 7.51983 1.15823M7.51985 15.0389C3.37347 15.0389 0 11.6655 0 7.51907C0 3.3727 3.37347 0 7.51985 0C11.6662 0 15.0389 3.3727 15.0389 7.51907C15.0389 11.6655 11.6662 15.0389 7.51985 15.0389" fill="#262626"/>
  </g>
  <mask id="mask1_33_1243" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="11" y="12" width="5" height="4">
  <path fill-rule="evenodd" clip-rule="evenodd" d="M11.7671 12.1279H15.6463V16H11.7671V12.1279Z" fill="white"/>
  </mask>
  <g mask="url(#mask1_33_1243)">
  <path fill-rule="evenodd" clip-rule="evenodd" d="M15.0674 16C14.9199 16 14.7717 15.9436 14.6582 15.8309L11.9372 13.1176C11.7109 12.8914 11.7101 12.5246 11.9364 12.2984C12.1618 12.0706 12.5286 12.0721 12.7556 12.2968L15.4766 15.0109C15.7029 15.2371 15.7036 15.6031 15.4774 15.8294C15.3647 15.9436 15.2156 16 15.0674 16Z" fill="#262626"/>
  </g>
  </svg>
  
    `;
  const Svg = () => <SvgXml xml={uncheck} onPress={props.toggle} />;
  return <Svg />;
}
export function SvgDarkHeaderIcon() {
  const uncheck = `
  <svg width="57" height="46" viewBox="0 0 57 46" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M8.82074 43.0206C8.82074 43.7636 8.58615 44.3984 8.11697 44.9251C7.64779 45.4517 7.0438 45.7157 6.30499 45.7169H2.58186C1.83111 45.7169 1.21319 45.4563 0.728099 44.9352C0.243006 44.4141 0.000306053 43.7767 0 43.0229V40.4292C0 39.6644 0.239946 39.038 0.719836 38.5502C1.19973 38.0624 1.8204 37.8177 2.58186 37.8162H6.23934C6.98948 37.8162 7.60739 38.0627 8.0931 38.5558C8.5788 39.0488 8.82151 39.6726 8.8212 40.4269L8.82074 43.0206ZM7.74512 42.9434V40.6081C7.75144 40.1731 7.60384 39.7501 7.32873 39.4146C7.20076 39.2502 7.0364 39.1182 6.84877 39.0291C6.66115 38.9401 6.45544 38.8964 6.24806 38.9015H2.57222C2.36476 38.8963 2.15897 38.94 1.97126 39.029C1.78354 39.1181 1.61911 39.2502 1.49109 39.4146C1.21632 39.7502 1.06891 40.1732 1.07516 40.6081V42.9434C1.0706 43.373 1.21804 43.7902 1.49109 44.1203C1.61889 44.285 1.78327 44.4173 1.97103 44.5065C2.15878 44.5957 2.36469 44.6393 2.57222 44.6338H6.24806C6.45552 44.6392 6.66133 44.5955 6.849 44.5064C7.03667 44.4172 7.20097 44.2849 7.32873 44.1203C7.60209 43.7903 7.74971 43.3731 7.74512 42.9434Z" fill="white"/>
<path d="M18.1792 45.7169H12.6266C11.8552 45.7169 11.2326 45.4592 10.7589 44.9438C10.2852 44.4284 10.0483 43.7878 10.0483 43.0221V40.4277C10.0483 39.6626 10.2879 39.0361 10.7672 38.5481C11.2464 38.0601 11.8662 37.8162 12.6266 37.8162H18.1792V38.8995H12.6133C12.4066 38.8942 12.2015 38.9379 12.0146 39.027C11.8276 39.1162 11.664 39.2483 11.5369 39.4128C11.2636 39.7489 11.1174 40.172 11.1243 40.6066V42.9426C11.1191 43.3719 11.2654 43.7891 11.5369 44.1198C11.6639 44.2844 11.8275 44.4167 12.0145 44.5059C12.2014 44.5951 12.4065 44.6389 12.6133 44.6335H18.1792V45.7169Z" fill="white"/>
<path d="M28.151 38.9748H24.127V45.7168H23.0464V38.9748H19.0229V37.8928H28.151V38.9748Z" fill="white"/>
<path d="M36.7421 40.448V45.7168H35.6655V41.2179H30.4796C29.9827 41.2179 29.599 41.386 29.3285 41.7221C29.058 42.0582 28.9226 42.4838 28.9223 42.9989C28.9183 43.4258 29.0823 43.8368 29.3782 44.1417C29.5172 44.2973 29.6874 44.4212 29.8776 44.5052C30.0678 44.5891 30.2735 44.6313 30.481 44.6287H34.1757V45.7168H30.481C29.6634 45.7168 29.0119 45.4319 28.5266 44.862C28.0717 44.3234 27.8442 43.6343 27.8442 42.7948C27.8442 42.0342 28.0993 41.4003 28.6094 40.8932C29.1194 40.3862 29.7462 40.1318 30.4898 40.1303H35.6655C35.5984 39.7703 35.4178 39.4419 35.1508 39.1939C34.8933 38.9523 34.5533 38.8205 34.2019 38.8261H29.1378V37.7394H34.1633C34.9123 37.7394 35.5293 38.0011 36.0142 38.5246C36.4992 39.0481 36.7418 39.6892 36.7421 40.448Z" fill="white"/>
<path d="M47.1742 45.7168H46.0986V40.5452C46.0991 40.3393 46.0592 40.1354 45.9813 39.9451C45.9034 39.7547 45.7889 39.5817 45.6445 39.4359C45.5 39.2901 45.3284 39.1743 45.1394 39.0953C44.9505 39.0162 44.7479 38.9754 44.5432 38.9752H40.9849C40.7802 38.9754 40.5776 39.0161 40.3886 39.0952C40.1996 39.1742 40.0279 39.2899 39.8834 39.4357C39.7389 39.5815 39.6244 39.7546 39.5465 39.945C39.4685 40.1353 39.4286 40.3393 39.4291 40.5452V45.7168H38.353V40.5452C38.353 39.7888 38.6041 39.1577 39.1064 38.6519C39.6086 38.1462 40.2348 37.8931 40.9849 37.8928H44.5432C45.2934 37.8928 45.9196 38.1654 46.4218 38.7106C46.924 39.2558 47.1748 39.9064 47.1742 40.6624V45.7168Z" fill="white"/>
<path d="M56.0719 45.7168H51.0534C50.3052 45.7168 49.6888 45.454 49.2043 44.9283C48.7198 44.4027 48.4777 43.7619 48.478 43.0059V40.448C48.478 39.6901 48.7201 39.049 49.2043 38.5246C49.6885 38.0002 50.3049 37.7385 51.0534 37.7394H56.0719V38.8261H51.0406C50.6102 38.8261 50.2543 39 49.9732 39.3479C49.6964 39.6824 49.5467 40.1061 49.551 40.5426V41.3339H56.0225V42.4206H49.551V42.934C49.5469 43.3654 49.6968 43.7838 49.9732 44.1121C50.2543 44.4546 50.6102 44.6261 51.0406 44.6264H56.0719V45.7168Z" fill="white"/>
<path d="M15.1111 29.7317C15.1089 29.9046 15.0382 30.0696 14.9144 30.1904C14.7907 30.3111 14.624 30.3777 14.4511 30.3756C14.2782 30.3735 14.1132 30.3027 13.9924 30.179C13.8717 30.0552 13.805 29.8885 13.8072 29.7156C13.8082 29.63 13.8261 29.5454 13.8599 29.4667C13.8936 29.388 13.9425 29.3168 14.0038 29.257C14.0651 29.1972 14.1376 29.15 14.2171 29.1182C14.2966 29.0865 14.3816 29.0706 14.4672 29.0717C14.5528 29.0728 14.6374 29.0907 14.7161 29.1244C14.7948 29.1582 14.866 29.2071 14.9258 29.2684C14.9856 29.3296 15.0328 29.4021 15.0645 29.4816C15.0963 29.5611 15.1121 29.6461 15.1111 29.7317Z" fill="#C72426"/>
<path d="M34.6708 28.0591C34.6644 28.2292 34.5878 28.3903 34.4573 28.5079C34.3269 28.6254 34.1529 28.69 33.9726 28.688C33.7923 28.6859 33.62 28.6174 33.4925 28.4969C33.3651 28.3764 33.2926 28.2137 33.2906 28.0434C33.2895 27.9565 33.3069 27.8703 33.3416 27.7898C33.3764 27.7093 33.4278 27.6363 33.4929 27.5748C33.558 27.5134 33.6354 27.4649 33.7207 27.4321C33.8059 27.3994 33.8972 27.383 33.9892 27.3841C34.0812 27.3851 34.172 27.4035 34.2564 27.4382C34.3408 27.4729 34.4169 27.5232 34.4805 27.586C34.544 27.6489 34.5935 27.7232 34.6262 27.8044C34.6589 27.8856 34.6741 27.9722 34.6708 28.0591Z" fill="#C72426"/>
<path d="M12.1285 21.8331C11.7967 21.7498 11.4471 21.7741 11.1301 21.9028C10.8132 22.0314 10.5454 22.2575 10.3656 22.5485C10.1858 22.8395 10.1032 23.1801 10.1299 23.5211C10.1566 23.8621 10.2912 24.1858 10.5141 24.4452C10.737 24.7046 11.0367 24.8863 11.3698 24.9641C11.7029 25.0418 12.0521 25.0115 12.3668 24.8775C12.6815 24.7435 12.9454 24.5128 13.1203 24.2188C13.2951 23.9249 13.3719 23.5829 13.3394 23.2424C13.3076 22.9112 13.1742 22.598 12.9574 22.3457C12.7406 22.0934 12.451 21.9143 12.1285 21.8331Z" fill="#C72426"/>
<path d="M44.3361 9.4008C44.0439 9.3275 43.736 9.3491 43.4569 9.46245C43.1778 9.57581 42.942 9.77504 42.7836 10.0313C42.6253 10.2876 42.5526 10.5876 42.5761 10.8879C42.5996 11.1883 42.7181 11.4733 42.9144 11.7018C43.1106 11.9304 43.3746 12.0905 43.6679 12.159C43.9612 12.2276 44.2688 12.201 44.546 12.0832C44.8233 11.9653 45.0558 11.7623 45.21 11.5035C45.3641 11.2447 45.432 10.9435 45.4036 10.6436C45.376 10.3515 45.2585 10.0752 45.0673 9.85259C44.8761 9.63002 44.6207 9.47218 44.3361 9.4008Z" fill="#C72426"/>
<path d="M13.9627 21.8351C13.8221 21.6908 13.7154 21.5171 13.6502 21.3264C13.5851 21.1357 13.5631 20.9329 13.5859 20.7326C13.6087 20.5324 13.6757 20.3397 13.782 20.1687C13.8884 19.9976 14.0315 19.8523 14.2008 19.7435L22.7429 14.2527C25.0019 12.9084 26.307 12.9839 28.719 14.4829L31.6671 16.7182C32.0807 17.0316 32.5863 17.1989 33.105 17.1941C33.6236 17.1892 34.126 17.0125 34.5338 16.6915L39.7743 12.5621C40.0556 12.3406 40.4133 12.24 40.7686 12.2825C41.1239 12.325 41.4479 12.507 41.6692 12.7887V12.7887C41.7789 12.9282 41.86 13.088 41.908 13.2589C41.956 13.4299 41.9699 13.6086 41.9489 13.7849C41.9279 13.9613 41.8724 14.1317 41.7856 14.2866C41.6988 14.4414 41.5824 14.5776 41.443 14.6874L34.5646 20.1076C34.157 20.4291 33.6545 20.6061 33.1358 20.611C32.617 20.6158 32.1113 20.4482 31.6979 20.1343L27.7173 17.0925C25.9705 15.7675 25.2529 15.7509 23.409 16.9387L15.6668 22.0294C15.4038 22.1984 15.0907 22.2714 14.7802 22.236C14.4697 22.2006 14.181 22.059 13.9627 21.8351V21.8351Z" fill="#C72426"/>
<path d="M14.2749 26.8507C13.763 26.8775 13.2671 27.0381 12.8371 27.3166C12.4071 27.595 12.058 27.9814 11.8251 28.437C11.5921 28.8925 11.4833 29.4012 11.5097 29.9119C11.5361 30.4226 11.6968 30.9174 11.9755 31.3467C12.2542 31.7759 12.6413 32.1244 13.0977 32.3572C13.5542 32.59 14.064 32.699 14.576 32.6731C15.088 32.6472 15.5841 32.4874 16.0147 32.2098C16.4452 31.9321 16.7949 31.5463 17.0287 31.0912C16.1531 29.8264 15.5053 28.4189 15.1144 26.9322C14.84 26.8643 14.5572 26.8368 14.2749 26.8507V26.8507ZM14.5214 31.0834C14.259 31.0989 13.9979 31.0364 13.7711 30.9039C13.5443 30.7713 13.362 30.5746 13.2473 30.3387C13.1326 30.1028 13.0907 29.8382 13.1267 29.5785C13.1628 29.3187 13.2752 29.0755 13.4499 28.8796C13.6245 28.6836 13.8535 28.5437 14.1079 28.4776C14.3623 28.4115 14.6306 28.4222 14.8789 28.5082C15.1272 28.5943 15.3443 28.7518 15.5028 28.961C15.6613 29.1702 15.754 29.4216 15.7693 29.6833C15.7891 30.0339 15.669 30.378 15.4351 30.6404C15.2012 30.9028 14.8727 31.0621 14.5214 31.0834V31.0834Z" fill="white"/>
<path d="M43.787 17.9129C43.2169 17.743 42.6093 17.7583 42.0481 17.9565C41.4869 18.1548 40.9999 18.5263 40.6543 19.0196C41.1497 20.4422 41.4064 21.94 41.4134 23.4499L41.57 23.3266C42.0223 23.585 42.5342 23.7144 43.0522 23.7012C43.5702 23.6881 44.0752 23.5329 44.5143 23.252C44.9535 22.971 45.3106 22.5745 45.5483 22.1041C45.786 21.6337 45.8955 21.1067 45.8654 20.5782C45.8301 19.9692 45.6114 19.3863 45.2394 18.9092C44.8673 18.4321 44.36 18.0841 43.787 17.9129ZM43.9595 21.6414C43.7573 21.8734 43.4826 22.0266 43.1822 22.0749C42.8818 22.1232 42.5743 22.0636 42.3121 21.9062C42.0499 21.7489 41.8492 21.5034 41.7442 21.2118C41.6393 20.9202 41.6366 20.6005 41.7365 20.307C41.8364 20.0136 42.0329 19.7647 42.2923 19.6026C42.5518 19.4406 42.8582 19.3755 43.1594 19.4184C43.4606 19.4613 43.7379 19.6096 43.9441 19.838C44.1502 20.0664 44.2725 20.3608 44.29 20.671C44.3003 20.8471 44.2764 21.0235 44.2195 21.1901C44.1626 21.3567 44.0739 21.51 43.9586 21.6414H43.9595Z" fill="white"/>
<path d="M40.0827 20.9082C40.109 21.3635 40.2422 21.8063 40.4715 22.2008L35.7216 25.8463C35.1371 25.3609 34.3866 25.1213 33.6285 25.1783C32.8704 25.2353 32.1642 25.5844 31.6591 26.1517C31.6089 26.2083 31.5628 26.2676 31.5176 26.3274L28.0107 23.9419C28.0971 23.5332 28.0949 23.1109 28.0043 22.7031C27.9137 22.2954 27.7368 21.9117 27.4855 21.5779C27.2341 21.244 26.9142 20.9677 26.547 20.7676C26.1799 20.5674 25.7742 20.4479 25.357 20.4172C24.9398 20.3865 24.5209 20.4453 24.1284 20.5896C23.7359 20.7339 23.3788 20.9604 23.0811 21.2538C22.7835 21.5473 22.5522 21.9009 22.4027 22.291C22.2532 22.6811 22.1891 23.0986 22.2145 23.5155C22.2272 23.7128 22.2597 23.9083 22.3113 24.0992L16.3285 27.4954C16.0165 27.229 15.6516 27.0315 15.2578 26.9158C15.2095 26.902 15.1597 26.8983 15.1113 26.8868C15.503 28.3806 16.1525 29.7948 17.0306 31.0659C17.2176 30.7166 17.3295 30.3321 17.3594 29.9372C17.3893 29.5422 17.3365 29.1454 17.2043 28.7719L23.0871 25.4318C23.3671 25.7079 23.7 25.9248 24.0659 26.0694C24.4317 26.214 24.8231 26.2834 25.2165 26.2734C25.6098 26.2635 25.9972 26.1743 26.3552 26.0114C26.7133 25.8484 27.0347 25.615 27.3003 25.3251L30.9358 27.7972C30.9187 27.9539 30.9141 28.1117 30.9219 28.2691C30.9442 28.6531 31.0421 29.0289 31.2098 29.3752C31.3776 29.7214 31.612 30.0313 31.8997 30.287C32.1874 30.5428 32.5228 30.7395 32.8866 30.8659C33.2504 30.9923 33.6356 31.0459 34.0202 31.0236C34.4048 31.0013 34.7812 30.9037 35.128 30.7362C35.4748 30.5687 35.7851 30.3346 36.0413 30.0473C36.2974 29.7601 36.4944 29.4252 36.621 29.062C36.7476 28.6987 36.8012 28.3141 36.7789 27.9301C36.7624 27.65 36.7053 27.3737 36.6094 27.1099L41.4215 23.4166C41.4144 21.9192 41.154 20.4338 40.6512 19.0231C40.2474 19.5661 40.0463 20.2328 40.0827 20.9082V20.9082ZM25.2197 24.6747C24.9558 24.6904 24.693 24.6277 24.4648 24.4943C24.2366 24.3609 24.0532 24.1628 23.9378 23.9253C23.8224 23.6877 23.7801 23.4213 23.8165 23.1597C23.8528 22.8982 23.9661 22.6533 24.1419 22.4561C24.3177 22.2589 24.5482 22.1182 24.8042 22.0518C25.0601 21.9855 25.3301 21.9965 25.5798 22.0834C25.8295 22.1704 26.0477 22.3293 26.2069 22.5402C26.366 22.7511 26.4589 23.0043 26.4738 23.268C26.4937 23.6204 26.3729 23.9663 26.1378 24.23C25.9028 24.4937 25.5726 24.6536 25.2197 24.6747V24.6747ZM33.9272 29.4283C33.6638 29.4436 33.4018 29.3806 33.1743 29.2472C32.9468 29.1138 32.764 28.9161 32.6491 28.679C32.5342 28.4419 32.4923 28.176 32.5287 27.9152C32.5651 27.6543 32.6781 27.41 32.8536 27.2133C33.029 27.0165 33.2589 26.8762 33.5143 26.8099C33.7696 26.7437 34.0389 26.7546 34.2881 26.8411C34.5372 26.9277 34.7551 27.0861 34.914 27.2963C35.073 27.5066 35.166 27.7591 35.1812 28.0221C35.1924 28.1968 35.1687 28.372 35.1115 28.5376C35.0544 28.7031 34.965 28.8557 34.8484 28.9865C34.7318 29.1172 34.5904 29.2236 34.4323 29.2995C34.2743 29.3753 34.1027 29.4191 33.9276 29.4283H33.9272Z" fill="white"/>
<path d="M38.8131 6.27472C38.7768 9.54232 36.0302 12.2512 32.7256 12.2728C29.3498 12.2954 26.5209 9.48249 26.5406 6.12515C26.5622 2.75629 29.4182 -0.0584468 32.7545 0.000922342C36.1428 0.0612119 38.8508 2.86583 38.8131 6.27472Z" fill="white"/>
<path d="M25.7732 23.3648C25.7721 23.4504 25.7532 23.535 25.7175 23.6137C25.6818 23.6924 25.6301 23.7637 25.5652 23.8235C25.4342 23.9443 25.2577 24.011 25.0746 24.0089C24.8916 24.0068 24.7168 23.9362 24.5889 23.8124C24.461 23.6887 24.3904 23.522 24.3926 23.3491C24.3948 23.1762 24.4697 23.0112 24.6007 22.8904C24.7317 22.7696 24.9082 22.7029 25.0912 22.705C25.2743 22.7071 25.449 22.7778 25.5769 22.9015C25.7048 23.0252 25.7754 23.1919 25.7732 23.3648V23.3648Z" fill="#C72426"/>
<path d="M43.7221 20.8488C43.7157 21.019 43.639 21.1801 43.5085 21.2976C43.378 21.4152 43.2039 21.4798 43.0236 21.4777C42.8433 21.4756 42.671 21.4069 42.5436 21.2864C42.4162 21.1658 42.3438 21.003 42.3418 20.8327C42.3408 20.7458 42.3583 20.6596 42.393 20.5792C42.4278 20.4988 42.4793 20.4257 42.5444 20.3643C42.6095 20.3029 42.6869 20.2544 42.7722 20.2217C42.8574 20.189 42.9487 20.1727 43.0407 20.1738C43.1327 20.1748 43.2235 20.1933 43.3079 20.228C43.3922 20.2627 43.4684 20.3129 43.5318 20.3758C43.5953 20.4387 43.6448 20.513 43.6775 20.5942C43.7102 20.6754 43.7253 20.762 43.7221 20.8488Z" fill="#C72426"/>
</svg>
    `;
  const Svg = () => <SvgXml xml={uncheck} width="100%" />;
  return <Svg />;
}

export function SvgEmoFace(props: Props) {
  const uncheck = `<svg id="emoji" viewBox="0 0 72 72" xmlns="http://www.w3.org/2000/svg">
    <g id="color">
      <circle cx="36" cy="36" r="24" fill="#fcea2b"/>
      <path fill="#fff" d="M50.595,41.64a11.5554,11.5554,0,0,1-.87,4.49c-12.49,3.03-25.43.34-27.49-.13a11.4347,11.4347,0,0,1-.83-4.36h.11s14.8,3.59,28.89.07Z"/>
      <path fill="#ea5a47" d="M49.7251,46.13c-1.79,4.27-6.35,7.23-13.69,7.23-7.41,0-12.03-3.03-13.8-7.36C24.2951,46.47,37.235,49.16,49.7251,46.13Z"/>
      <path fill="#92d3f5" d="M65.7563,47.3378a4.2418,4.2418,0,0,1-6.001.001c-2.9718-2.9717-3.0059-8.961-3.0063-9.0208.2314.0131,6.0508.0625,9.0073,3.019a4.2411,4.2411,0,0,1,0,6.0008Z"/>
      <path fill="#92d3f5" d="M6.2392,47.3385a4.242,4.242,0,0,1-.0011-6.0011c2.9717-2.9717,8.9611-3.0059,9.0208-3.0063-.0131.2314-.0625,6.0509-3.019,9.0074a4.2412,4.2412,0,0,1-6.0007,0Z"/>
    </g>
    <g id="hair"/>
    <g id="skin"/>
    <g id="skin-shadow"/>
    <g id="line">
      <path fill="none" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M58.8479,33.3406q-.01-.0839-.02-.1675A23.0031,23.0031,0,0,0,13.2041,32.92c-.0148.1069-.0386.3127-.052.42"/>
      <path fill="none" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.1832,49.229A23.5314,23.5314,0,0,0,36,59a23.3428,23.3428,0,0,0,18.7572-9.6871"/>
      <path fill="none" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.6948,28.2a6.3062,6.3062,0,0,1,3.3907-3,6.3038,6.3038,0,0,1,4.53-.4209"/>
      <path fill="none" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M51.3052,28.2A7.19,7.19,0,0,0,43.396,24.77"/>
      <path fill="none" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M50.595,41.64a11.5554,11.5554,0,0,1-.87,4.49c-12.49,3.03-25.43.34-27.49-.13a11.4347,11.4347,0,0,1-.83-4.36h.11s14.8,3.59,28.89.07Z"/>
      <path fill="none" stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M49.7251,46.13c-1.79,4.27-6.35,7.23-13.69,7.23-7.41,0-12.03-3.03-13.8-7.36C24.2951,46.47,37.235,49.16,49.7251,46.13Z"/>
      <path fill="none" stroke="#000" stroke-linejoin="round" stroke-width="2" d="M65.7563,47.3378a4.2418,4.2418,0,0,1-6.001.001c-2.9718-2.9717-3.0059-8.961-3.0063-9.0208.2314.0131,6.0508.0625,9.0073,3.019a4.2411,4.2411,0,0,1,0,6.0008Z"/>
      <path fill="none" stroke="#000" stroke-linejoin="round" stroke-width="2" d="M6.2392,47.3385a4.242,4.242,0,0,1-.0011-6.0011c2.9717-2.9717,8.9611-3.0059,9.0208-3.0063-.0131.2314-.0625,6.0509-3.019,9.0074a4.2412,4.2412,0,0,1-6.0007,0Z"/>
      <path fill="none" stroke="#000" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" d="M31.6941,35.1642a4.7263,4.7263,0,0,0-8.6382,0"/>
      <path fill="none" stroke="#000" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" d="M48.9441,35.1642a4.7263,4.7263,0,0,0-8.6382,0"/>
    </g>
  </svg>
  `;
  const Svg = () => <SvgXml xml={uncheck} onPress={props.toggle} />;
  return <Svg />;
}
export function SvgEmoHeart(props: Props) {
  const uncheck = `<svg id="emoji" viewBox="0 0 72 72" xmlns="http://www.w3.org/2000/svg">
  <g id="color">
    <path fill="#EA5A47" d="M59.5,25c0-6.9036-5.5964-12.5-12.5-12.5c-4.7533,0-8.8861,2.6536-11,6.5598 C33.8861,15.1536,29.7533,12.5,25,12.5c-6.9036,0-12.5,5.5964-12.5,12.5c0,2.9699,1.0403,5.6942,2.7703,7.8387l-0.0043,0.0034 L36,58.5397l20.7339-25.6975l-0.0043-0.0034C58.4597,30.6942,59.5,27.9699,59.5,25z"/>
  </g>
  <g id="hair"/>
  <g id="skin"/>
  <g id="skin-shadow"/>
  <g id="line">
    <path fill="none" stroke="#000000" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="2" d="M59.5,25 c0-6.9036-5.5964-12.5-12.5-12.5c-4.7533,0-8.8861,2.6536-11,6.5598C33.8861,15.1536,29.7533,12.5,25,12.5 c-6.9036,0-12.5,5.5964-12.5,12.5c0,2.9699,1.0403,5.6942,2.7703,7.8387l-0.0043,0.0034L36,58.5397l20.7339-25.6975l-0.0043-0.0034 C58.4597,30.6942,59.5,27.9699,59.5,25z"/>
  </g>
</svg>

  `;
  const Svg = () => <SvgXml xml={uncheck} onPress={props.toggle} />;
  return <Svg />;
}
export function SvgEmoThumb(props: Props) {
  const uncheck = `
  <svg id="emoji" viewBox="0 0 72 72" xmlns="http://www.w3.org/2000/svg">
  <g id="color"/>
  <g id="hair"/>
  <g id="skin">
    <polygon fill="#fcea2b" stroke="none" points="37.088,11.2316 34.166,11.8766 19,29.2096 11.667,42.2686 13.666,53.5426 26.604,60.6126 36.229,60.5716 50.271,60.7796 52.666,59.2096 53.416,55.3766 52.666,53.7926 56.25,53.7096 57.583,52.0426 58.416,49.7096 56.833,46.7096 58.416,46.0426 60.333,43.3766 59.416,40.6266 56.916,39.4596 58.083,37.2926 58.25,33.8766 55.666,32.3766 42.5,31.8766 41.666,31.2096 40.812,30.6126 31.687,30.6126 31.75,28.8766 35.666,19.2926 37.333,14.7096"/>
  </g>
  <g id="skin-shadow"/>
  <g id="line">
    <path fill="none" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M35.236,59.6006h-9 c-8.321,0-14-6.681-14-15c0.0204-4.7991,1.7993-9.4241,5-13"/>
    <path fill="none" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M34.625,31.6006h-4.389 l7-18c0.811-2.084-2.79-3.8-5-1l-15,19"/>
    <path fill="none" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M37.448,35.1006 c0.1527,2.0638,1.9342,3.6226,4,3.5h13c1.933,0.2578,3.709-1.1001,3.9669-3.0331s-1.1001-3.709-3.0331-3.9669 c-0.3099-0.0413-0.6238-0.0413-0.9337,0h-13C39.3822,31.478,37.6007,33.0368,37.448,35.1006z"/>
    <path fill="none" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M38.305,56.4366 c0.1527,2.0638,1.9342,3.6226,4,3.5h7c1.933,0.2578,3.709-1.1001,3.9669-3.0331s-1.1001-3.709-3.0331-3.9669 c-0.3099-0.0413-0.6238-0.0413-0.9337,0h-7C40.2392,52.814,38.4577,54.3728,38.305,56.4366z"/>
    <path fill="none" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M33.236,42.4366 c0.1527,2.0638,1.9342,3.6226,4,3.5h19c1.933,0.2578,3.709-1.1001,3.9669-3.0331s-1.1001-3.709-3.0331-3.9669 c-0.3099-0.0413-0.6238-0.0413-0.9337,0h-19C35.1702,38.814,33.3887,40.3728,33.236,42.4366z"/>
    <path fill="none" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M35.236,49.4366 c0.1527,2.0638,1.9342,3.6226,4,3.5h15c1.933,0.2578,3.709-1.1001,3.9669-3.0331s-1.1001-3.709-3.0331-3.9669 c-0.3099-0.0413-0.6238-0.0413-0.9337,0h-15C37.1702,45.814,35.3887,47.3728,35.236,49.4366z"/>
    <path fill="none" stroke="#000000" stroke-miterlimit="10" stroke-width="2" d="M14.136,36.2626 c-1.176,2.4511-1.8253,5.1215-1.906,7.839c0,8.56,4.625,15.5,15.125,15.5"/>
  </g>
</svg>


  `;
  const Svg = () => <SvgXml xml={uncheck} onPress={props.toggle} />;
  return <Svg />;
}
export function SvgEmoFire(props: Props) {
  const uncheck = `
  <svg id="emoji" viewBox="0 0 72 72" xmlns="http://www.w3.org/2000/svg"  >
  <g id="color">
    <path fill="#FCEA2B" stroke="none" d="M51.3344,58.3018c7.563-9.7894,4.0318-21.8721,2.4461-25.5688c-0.1799-0.4193-0.9302-0.5566-0.982-0.1006 c-0.1225,1.0797-0.4061,2.3611-2.0041,1.9736c-0.8203-0.1989-1.3479-0.556-1.3479-1.8802 c0.511-15.0494-10.5109-25.2968-14.3463-28.5356c-0.5103-0.4309-1.2668,0.0293-1.1587,0.7039 c2.456,15.3348-1.6079,14.2846-3.0986,13.8192c-0.2593-0.081-0.5408,0.0546-0.6603,0.3074 c-4.5882,9.7014-3.4112,14.2653-3.519,17.4455c0,0.2569,0,0.687,0,0.9581c0,1.746-1.4154,2.5822-2.5607,2.0714 c-2.0545-0.9163-2.4047-6.3729-2.4134-7.8235c-0.0041-0.6828-0.8094-0.8791-1.202-0.332 c-8.8048,12.267-2.3251,23.1974-0.0822,26.3171c0.6459,0.8984,0.9025,2.0748,0.5354,3.1298 c-0.0412,0.1183-0.0896,0.2352-0.1465,0.349c-0.3988,0.7981,0.6707,1.4,0.6707,1.4c1.3155,1.2339,5.4651,5.1806,14.2817,5.1805 c7.1344-0.0001,11.9478-3.0595,13.8297-4.7247c0.8829-0.7812,1.2761-0.8594,1.2732-1.6827 C50.8459,60.3243,50.8238,58.8066,51.3344,58.3018"/>
    <path fill="#F1B31C" stroke="none" d="M36.2938,32.5579c-0.2946,1.4609-1.3196,4.0019-4.2072,8.3499c-0.0592,0.1064-0.1172,0.2104-0.1764,0.3168 c-0.3088,0.6893-1.3555,3.3414-1.0617,7.0514c0,0.0001,0,0,0,0.0001c-0.0002,0.0018-0.573,4.337-2.977,3.9757 c-0.5095-0.0766-0.9214-0.2506-1.2541-0.4772c-0.6105-0.4159-1.4234,0.1082-1.3489,0.8525 c0.3195,3.1924,1.6034,8.0822,6.1526,11.6721c0,0,1.2832,1.0598,1.4415,1.9748c0.0052,0.0303,0.029,0.0506,0.0591,0.0506l5.2741,0 c0.1832,0,0.2083-0.024,0.2135-0.0594c0.0356-0.2402,0.3643-1.2504,3.2024-3.7732c1.9966-1.7748,3.1652-3.898,3.7424-5.3482 c0.2048-0.5145-0.101-1.1173-0.6389-1.2068c-0.3438-0.0572-0.7127-0.3603-1.0133-1.1841c-0.0003-0.001-0.0003-0.0009-0.0007-0.0019 c-0.0063-0.0235-0.2167-0.8383,0.6013-2.5595c0.3805-0.8006,0.4242-1.6645,0.36-2.3655c-0.0579-0.6322-0.7233-0.998-1.2816-0.7156 c-0.7839,0.3965-1.8694,0.5304-2.5993-1.0753c0,0-0.6584-1.5662-0.0859-5.4515c0.437-2.9656-1.0106-7.8615-2.8279-10.3747 C37.4192,31.5887,36.4459,31.8032,36.2938,32.5579z"/>
  </g>
  <g id="hair"/>
  <g id="skin"/>
  <g id="skin-shadow"/>
  <g id="line">
    <path fill="none" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="2" d="M21.6298,61.5562c3.479,3.6108,8.6702,5.4754,13.9925,5.4754c5.0546,0,10.7077-1.9624,14.2409-5.4677"/>
    <path fill="none" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="2" d="M21.5108,57.4557c0,0-10.5321-11.2011-0.4546-25.9791c0,0,0.1969,4.0589,1.2551,6.5816c0.4834,1.0362,1.2122,1.9569,2.3487,1.9569 c1.3355,0,2.4181-0.8972,2.4181-2.5708c0-0.2599,0-0.6721,0-0.9184c0.105-3.0996-0.5251-7.6659,3.5708-17.19 c0,0,7.0365,3.7835,3.9909-14.6122c0,0,14.8798,10.4421,14.2762,28.217c0,1.2693,0.9678,2.2983,2.1617,2.2983 s2.1617-1.029,2.1617-2.2983c0.075,0.1341,6.3219,13.078-2.514,24.515"/>
    <path fill="none" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="2" d="M22.8203,22.9729c0.198-1.0358,0.7082-2.2802,1.9228-3.3185c0,0,1.9021-1.6355,1.5953-3.8305"/>
  </g>
</svg>

  `;
  const Svg = () => <SvgXml xml={uncheck} onPress={props.toggle} />;
  return <Svg />;
}
export function SvgEmoParty(props: Props) {
  const uncheck = `
  <svg id="emoji" viewBox="0 0 72 72" xmlns="http://www.w3.org/2000/svg">
  <g id="color">
    <polygon fill="#F1B31C" stroke="none" points="26.1808,20.1808 38.75,32.75 51.3192,45.3192 29.7894,54.2798 8.2597,63.2403 17.2202,41.7106"/>
    <polygon fill="#FCEA2B" stroke="none" points="40,35 25.6924,20.6692 16.3914,42.5394 7.0905,64.4095"/>
    <polygon fill="#EA5A47" stroke="none" points="15.2238,45.2849 26.2858,56.3469 20.7548,58.5984 12.9576,50.8012"/>
    <polygon fill="#D22F27" stroke="none" points="17.3429,55.2475 20.7548,58.5984 26.2858,56.3469 21.4849,51.546"/>
    <polygon fill="#EA5A47" stroke="none" points="20.8045,32.1625 27.5011,38.8591 39.2002,50.5583 32.9273,53.4217 24.7555,45.2498 18.1504,38.6447"/>
    <polygon fill="#D22F27" stroke="none" points="26.5369,47.0312 32.9273,53.4216 39.2003,50.5582 31.3616,42.7197"/>
    <ellipse cx="30.2951" cy="14.4579" rx="2" ry="1.9708" fill="#8967aa" stroke="none"/>
    <path fill="#ea5a47" stroke="none" d="M23,37"/>
    <ellipse cx="60.2951" cy="18.4579" rx="2" ry="1.9708" fill="#f1b31c" stroke="none"/>
    <ellipse cx="57.2951" cy="39.4579" rx="2" ry="1.9708" fill="#d22f27" stroke="none"/>
  </g>
  <g id="hair"/>
  <g id="skin"/>
  <g id="skin-shadow"/>
  <g id="line">
    <polyline fill="none" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="2" points="50.6626,45.6395 50.8308,45.8076 28.9606,55.1086 7.0904,64.4096 16.3914,42.5394 25.6923,20.6692"/>
    <polyline fill="none" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="2" points="25.801,20.7779 38.2616,33.2384 50.6626,45.6395"/>
    <line x1="25.6923" x2="25.801" y1="20.6692" y2="20.7779" fill="none" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="2"/>
    <path fill="none" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="2" d="M46.4905,7.3671c0.2347,0.4487,0.4027,0.943,0.4897,1.473c0.451,2.7473-1.447,5.4141-4.2392,5.9565"/>
    <path fill="none" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="2" d="M42.9327,14.7763c-0.5049,0.0384-1.0133,0.1573-1.509,0.364c-2.5697,1.0713-3.828,4.093-2.8105,6.7492"/>
    <path fill="none" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="2" d="M61.7928,26.7168c-0.0987,0.4967-0.2778,0.987-0.5425,1.4544c-1.372,2.4225-4.5229,3.309-7.0378,1.98"/>
    <path fill="none" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" stroke-width="2" d="M54.3745,30.2558c-0.4173-0.2868-0.8878-0.513-1.4036-0.663c-2.6733-0.7775-5.5486,0.7867-6.4223,3.4936"/>
  </g>
</svg>


  `;
  const Svg = () => <SvgXml xml={uncheck} onPress={props.toggle} />;
  return <Svg />;
}
